# 2016-07-01
public class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        // Write your code here
        ListNode dummy = new ListNode(0);
        ListNode move = dummy;
        int len = length(head);
        while(len >= k){
            ListNode dummy1 = new ListNode(0);
            ListNode temp = dummy1;
            for(int i = 0; i < k; i++) {
                temp.next = new ListNode(head.val);
                temp = temp.next;
                head = head.next;
            }
            temp = reverse(dummy1.next);
            move.next = temp;
            for(int i = 0; i < k; i++) {
                move = move.next;
            }
            len = len - k;
        }
        if(len < k) {
            move.next = head;
        }
        return dummy.next;
    }
    private ListNode reverse(ListNode head) {
        ListNode pre = null;
        while (head != null) {
            ListNode temp = head.next;
            head.next = pre;
            pre = head;
            head = temp;
        }
        return pre;
    }
    private int length(ListNode head) {
        if (head == null) return 0;
        int l = 0;
        while(head != null) {
            l++;
            head = head.next;
        }
        return l;
    }
}
