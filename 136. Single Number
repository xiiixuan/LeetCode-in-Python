# 2016-10-05
public class Solution {
// //法一：放到HashSet中，有重复的就出去，最后只能剩一个      
//     public int singleNumber(int[] A) {
//         // Write your code here
//         Arrays.sort(A);
//         HashSet<Integer> set = new HashSet<>();
//         for (int i = 0; i < A.length; i++) {
//             if (set.contains(A[i])) {
//                 set.remove(A[i]);
//             }else {
//                 set.add(A[i]);
//             }
//         }
//         for (Integer i : set) {
//             return i;
//         }
//         return 0;
//     }
//法二：每个都进行异或运算，一样的数组两个异或是0的，最后剩下的就是结果
    public int singleNumber(int[] A) {
        if (A == null || A.length == 0) {
            return 0;
        }
        int result = 0;
        for (int i = 0; i < A.length; i++) {
            result ^= A[i];
        }
        return result;
    }
}
