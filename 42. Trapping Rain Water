# 2016-08-25
public class Solution {
    public int trap(int[] heights) {
        int[] left = new int[heights.length];
        int[] right = new int[heights.length];
        
        int max = 0;
        for (int i = 0; i < heights.length; i++) {
            left[i] = Math.max(max, heights[i]);
            max = Math.max(max, heights[i]);
        }
        
        max = 0;
        for (int i = heights.length - 1; i >= 0; i--) {
            right[i] = Math.max(max, heights[i]);
            max = Math.max(max, heights[i]);
        }
        
        int area = 0;
        for (int i = 1; i < heights.length - 1; i++) {
            int volumn = Math.min(left[i], right[i]) - heights[i];
            if (volumn > 0) {
                area += volumn;
            }
        }
        return area;
    }
}
