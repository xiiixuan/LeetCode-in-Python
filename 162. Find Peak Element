# 2016-02-22  Runtime: 52 ms  64.12%
class Solution(object):
    def findPeakElement(self, nums):
        L,R=0,len(nums)-1
        if L==R:
            return 0
        while L<R:
            if R-L==1:
                return L if nums[L]>nums[R] else R
            M=(L+R)/2
            if nums[M]>nums[M+1]:
                R=M
            else:
                L=M
#Java           
public class Solution {
    public int findPeakElement(int[] A) {
        if (A == null || A.length <= 1) {
            return 0;
        }
        if (A.length == 2) {
            if (A[1] > A[0]) {
                return 1;
            }
            return 0;
        }
        int start = 0; 
        int end = A.length - 1;
        while (start < end) {
            if (start + 1 == end) {
                if (A[start] > A[end]) {
                    return start;
                }
                return end;
            }
            int mid = start + (end - start) / 2;
            if (A[mid] > A[mid + 1] ){
                end = mid;
            } else {
                start = mid;
            }
        }
        
        if (A[start] > A[end]) {
            return start;
        }
        return end;
    }
}

