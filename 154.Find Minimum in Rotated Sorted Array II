# 2016-02-22  Runtime: 48 ms  43.62%
#存在重复元素 Eg:[10,1,10,10,10] or  [10,10,10,2,10]
class Solution(object):
    def findMin(self, nums):
        L,R=0,len(nums)-1
        if L==R:
            return nums[L]
        if nums[L]<nums[R]:
            return nums[L]
        while L<R:
            if R-L==1:
                return min(nums[L],nums[R])
            M=(L+R)/2
            if nums[L]<=nums[M] and nums[M]!=nums[R]:
                L=M
            elif nums[M]<=nums[R] and nums[M]!=nums[L]:
                R=M   
            elif nums[L]==nums[M]==nums[R]:
                if sum(nums[L:M])/(M-L)==nums[L]:
                    L=M
                else:
                    R=M

//java
public class Solution {
    // public int findMin(int[] nums) {
    //     int min = nums[0];
    //     for (int i = 1; i < nums.length; i++) {
    //         min = Math.min(nums[i], min);
    //     }
    //     return min;
    // }
    public int findMin(int[] nums) {
        int start = 0; 
        int end = nums.length - 1;
        while (start + 1 < end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] == nums[end]) {
                end--;
            }else if (nums[mid] > nums[end]) {
                start = mid;
            }else {
                end = mid;
            }
        }
        return Math.min(nums[start], nums[end]);
    }
}
