# 2016-02-25  Runtime: 64 ms  
#Binary search
class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        if x<0:
            return False
        start,end=0,x
        while start+1<end:
            m=(start+end)/2
            if m*m<x:
                start=m
            elif m*m>x:
                end=m
            else:
                return m
        if end*end<=x:
            return end
        else:
            return start

#Java
public class Solution {
    public int mySqrt(int x) {
        long start = 0, end = x;
        while(start + 1 < end) {
            long mid = start + (end - start) / 2;
            if (mid * mid > x) {
                end = mid;
            }else if (mid * mid < x) {
                start = mid;
            }else {
                return (int) mid;
            }
        }
        if (end * end <= x) {
            return (int) end;
        }
        return (int) start;
    }
}

