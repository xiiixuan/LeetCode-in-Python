# 2016-03-27
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result= new ArrayList<>();
        ArrayList<Integer> path=new ArrayList<>();
        if(root==null){
            return result;
        }
        helper(root,result,String.valueOf(root.val));
        return result;
    }
    private void helper(TreeNode root,List<String> result,String path){
        if(root==null){
            return;
        }
        if(root.left==null && root.right==null){
            result.add(path);
            return;
        }
        if(root.left!=null){
            helper(root.left,result,path+"->"+String.valueOf(root.left.val));
        }
        if(root.right!=null){
            helper(root.right,result,path+"->"+String.valueOf(root.right.val));
        }
    }
}
