# 2016-09-29
public class Solution {
    public int divide(int dividend, int divisor) {
        if (divisor == 0) {
             return dividend >= 0? Integer.MAX_VALUE : Integer.MIN_VALUE;
        }
        
        if (dividend == 0) {
            return 0;
        }
        
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        int sign = 1;  
        if(dividend<0) sign = -sign;  
        if(divisor<0) sign = -sign;  
        long temp = Math.abs((long)dividend);  
        long temp2 = Math.abs((long)divisor);  
        long c = 1;  
        
        //先二倍二倍增加，看最后 *2 的能算到多少
        while(temp>temp2){  
            temp2 = temp2<<1;  
            c = c<<1;  
        } 
        
        //此时temp2与temp 相差不到两倍，之后将c，temp2再缩小，求剩下的
        int res = 0;  
        while(temp>=Math.abs((long)divisor)){  
            while(temp>=temp2){  
                temp-=temp2;  
                res+=c;  
            }  
            temp2 = temp2>>1;  
            c=c>>1;  
        }  
        if(sign>0) return res;  
        else return -res;  
    }  
}

