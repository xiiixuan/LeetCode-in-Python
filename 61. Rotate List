# 2016-04-25
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode slow = head;
        ListNode fast = head;
        int m = findLength(head);
        k = k%m;
        if ( k==m || k==0) {
            return head;
        }
        for (int i=0; i<k; i++) {
            fast =  fast.next;
        }
        while (fast.next != null) {
            slow = slow.next;
            fast = fast.next;
        }
        ListNode temp = slow.next;
        slow.next =  null;
        slow = temp;
        //merge: head, slow
        fast.next = head;
        return slow;
        
    }
    private int findLength(ListNode head) {
        int i =0;
        while (head != null) {
            head= head.next;
            i++;
        }
        return i;
    }
}
