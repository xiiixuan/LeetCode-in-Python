# 2016-08-31
public class Solution {
    public int maximalSquare(char[][] matrix) {
        if (matrix == null || matrix.length == 0) {
            return 0;
        }
        int m = matrix.length;
        int n = matrix[0].length;
        int[][] f = new int[2][n];
        int result = 0;
        for (int j = 0; j < n; j++) {
            f[0][j] = matrix[0][j] - '0';
            result = Math.max(result, f[0][j]);
        }
        for (int i = 1; i < m; i++) {
            f[i % 2][0] = matrix[i][0] - '0';
            result = Math.max(result, f[i % 2][0]);
            for (int j = 1; j < n; j++) {
                if (matrix[i][j] == '1') {
                    f[i % 2][j] = Math.min(f[(i - 1) % 2][j - 1], Math.min(f[i % 2][j - 1], f[(i - 1) % 2][j])) + 1;
                }else {
                    f[i % 2][j] = 0;
                }
                result = Math.max(result, f[i % 2][j]);
            }
        }
        return result * result;
    }
}
