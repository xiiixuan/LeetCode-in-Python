# 2016-08-19
public class Solution {
    public int firstMissingPositive(int[] A) {
//桶排序的思路
        if (A == null || A.length == 0) {
            return 1;
        }
        for (int i = 0; i < A.length; i++) {
            while (A[i] > 0 && A[i] - 1 < A.length && A[i] != A[A[i] - 1]) {
                swap(A, i, A[i] - 1);
            }
        }
        for (int i = 0; i < A.length; i++) {
            if (A[i] != i + 1) {
                return i+1;
            }
        }
        return A.length + 1;
    }
    private void swap (int[] A, int i, int j) {
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }
}

//暴力算法
//         if (A == null || A.length == 0) {
//             return 1;
//         }
//         Arrays.sort(A);
//         int number = 1;
//         for (int i = 0; i < A.length; i++) {
//             if(A[i] <= 0) {
//                 continue;
//             }else {
//                 if (A[i] != number) {
//                     return number;
//                 }else {
//                     while (A[i] == number && i < A.length - 1) {
//                         i++;
//                     }
//                     i--;
//                     number++;
//                 }
//             }
//         }
//         if (A[A.length - 1] < 0) {
//             return 1;
//         }
//         return A[A.length - 1] + 1;
//     }
// }
