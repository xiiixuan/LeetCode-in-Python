# 2016-04-24
public class Solution {
    public int minDistance(String word1, String word2) {
        if (word1.length()==0 || word1 == null) {
            if (word2.length()==0 || word2 == null) {
                return 0;
            }else {
                return word2.length();
            }
        }
        
        int m =  word1.length();
        int n =  word2.length();
        int[][] f =  new int[m+1][n+1];
        for (int i = 0; i <= m; i++) {
            f[i][0] = i;
        } 
        for (int i = 1; i <= n; i++) {
            f[0][i] = i;
        } 
        
        for (int i=1; i<=m; i++) {
            for (int j=1; j<=n; j++) {
                int mini =  Math.min(f[i-1][j],f[i][j-1]);
                if (word1.charAt(i-1) == word2.charAt(j-1)) {
                    f[i][j] = Math.min(f[i-1][j-1],mini+1);
                }else {
                    f[i][j] = Math.min(f[i-1][j-1],mini)+1;
                }
            }
        }
        return f[m][n];
    }
}
