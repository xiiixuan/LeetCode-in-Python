# 2016-03-11  Runtime: 76ms
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isBalanced(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        balanced,height=self.recursion(root)
        return balanced
    def recursion(self,root):
        if root is None:
            return True, 0
        balance,leftheight=self.recursion(root.left)
        if not balance:
            return False, 0
        balance,rightheight=self.recursion(root.right)
        if not balance:
            return False, 0
        return abs(leftheight-rightheight)<=1,max(leftheight,rightheight)+1
        
