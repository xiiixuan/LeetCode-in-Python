# 2016-02-22  Runtime: 40 ms  79.89%
class Solution(object):
    def findMin(self, nums):
        L,R=0,len(nums)-1
        if L==R:
            return nums[L]
        if nums[L]<nums[R]:
            return nums[L]
        while L<R:
            if R-L==1:
                return min(nums[L],nums[R])
            M=(L+R)/2
            if nums[L]<nums[M]:
                L=M
            else:
                R=M
//java
public class Solution {
    public int findMin(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int start = 0;
        int end = nums.length - 1;
        while (start + 1 < end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] > nums[end]) {
                start = mid;
            }else {
                end =mid;
            }
        }
        return Math.min(nums[start], nums[end]);
    }
}

