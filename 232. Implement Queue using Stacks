# 2016-03-25
class MyQueue {
    // Push element x to the back of queue.
    Stack<Integer> stack1=new Stack<>();
    Stack<Integer> stack2=new Stack<>();
    public void push(int x) {
        stack1.push(x);
    }
    // Removes the element from in front of queue.
    public void pop() {
        if(stack2.isEmpty() && stack1.isEmpty()){
            throw new NullPointerException();
        }else if(stack2.isEmpty()){
            while(!stack1.isEmpty()){
                stack2.push(stack1.peek());
                stack1.pop();
            }
            stack2.pop();
        }else{
            stack2.pop();
        }
    }
    // Get the front element.
    public int peek() {
        if(stack2.isEmpty()){
            while(!stack1.isEmpty()){
                stack2.push(stack1.peek());
                stack1.pop();
            }
        }
        return stack2.peek();
    }
    // Return whether the queue is empty.
    public boolean empty() {
        return stack1.isEmpty() && stack2.isEmpty();
    }
}


    
    

    
